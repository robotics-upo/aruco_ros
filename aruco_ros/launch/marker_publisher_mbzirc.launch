<launch>

    <arg name="markerSize"      default="0.15"/>    <!-- in m -->
    <arg name="side"             default="left"/>
    <arg name="ref_frame"       default="/base_link"/>  <!-- leave empty and the pose will be published wrt param parent_name -->
    <arg name="camera_1" default="usb_cam_front" />
    <arg name="camera_2" default="usb_cam_back" />
    <arg name="republish" default="true"/>

    <node pkg="image_transport" type="republish" name="republish_image_1" args="compressed in:=/$(arg camera_1)/image_raw raw out:=/$(arg camera_1)/image_raw" if="$(arg republish)"/>
    <node pkg="image_transport" type="republish" name="republish_image_2" args="compressed in:=/$(arg camera_2)/image_raw raw out:=/$(arg camera_2)/image_raw" if="$(arg republish)"/>
    <node pkg="aruco_ros" type="marker_publisher" name="aruco_marker_publisher" output="screen">
        <remap from="/camera_info" to="/$(arg camera_1)/camera_info" />
        <remap from="/image" to="/$(arg camera_1)/image_raw" />
        <param name="image_is_rectified" value="True"/>
        <param name="marker_size"        value="$(arg markerSize)"/>
        <param name="reference_frame"    value="$(arg ref_frame)"/>   <!-- frame in which the marker pose will be refered -->
        <param name="camera_frame"       value="/$(arg camera_1)_link"/>
    </node>
    <node pkg="aruco_ros" type="marker_publisher" name="aruco_marker_publisher_2" output="screen">
        <remap from="/camera_info" to="/$(arg camera_2)/camera_info" />
        <remap from="/image" to="/$(arg camera_2)/image_raw" />
        <param name="image_is_rectified" value="True"/>
        <param name="marker_size"        value="$(arg markerSize)"/>
        <param name="reference_frame"    value="$(arg ref_frame)"/>   <!-- frame in which the marker pose will be refered -->
        <param name="camera_frame"       value="/$(arg camera_2)_link"/>
    </node>
    

    

</launch>

